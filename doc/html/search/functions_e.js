var searchData=
[
  ['sample',['sample',['../dd/d84/namespacefwdpp.html#a6525ec7f7183c758f5aed03f48e13964',1,'fwdpp::sample(const gsl_rng *r, const container_type&lt; gamete_type, allocator_t &gt; &amp;gametes, const unsigned &amp;n, const unsigned &amp;N)'],['../dd/d84/namespacefwdpp.html#a195cdea1d847b5077bd29bbbc7b09b82',1,'fwdpp::sample(const gsl_rng *r, const poptype &amp;p, const unsigned nsam, const bool removeFixed)'],['../dd/d84/namespacefwdpp.html#adfacca7d4b73ca851b8ff8fdf4abd85c',1,'fwdpp::sample(const gsl_rng *r, const poptype &amp;p, const unsigned nsam, const bool removeFixed)'],['../dd/d84/namespacefwdpp.html#a89f3461228b6d097ed9689092349e05b',1,'fwdpp::sample(const poptype &amp;p, const std::vector&lt; integer_type &gt; &amp;individuals, const bool removeFixed)'],['../dd/d84/namespacefwdpp.html#a5d41cfcbc1149c78aa8479b3ec4feb7c',1,'fwdpp::sample(const poptype &amp;p, const std::vector&lt; integer_type &gt; &amp;individuals, const bool removeFixed)']]],
  ['sample_5fdiploid',['sample_diploid',['../dd/d84/namespacefwdpp.html#ab4197908734e2e302817107feaaf86b9',1,'fwdpp::sample_diploid(const gsl_rng *r, gamete_cont_type&lt; gamete_type, gamete_cont_type_allocator &gt; &amp;gametes, diploid_vector_type&lt; diploid_geno_t, diploid_vector_type_allocator &gt; &amp;diploids, mutation_cont_type&lt; mutation_type, mutation_cont_type_allocator &gt; &amp;mutations, std::vector&lt; uint_t &gt; &amp;mcounts, const uint_t &amp;N_curr, const double &amp;mu, const mutation_model &amp;mmodel, const recombination_policy &amp;rec_pol, const diploid_fitness_function &amp;ff, typename gamete_type::mutation_container &amp;neutral, typename gamete_type::mutation_container &amp;selected, const double f=0., const mutation_removal_policy mp=mutation_removal_policy())'],['../dd/d84/namespacefwdpp.html#a98b03c871ca65d06c39081abb69f1f4c',1,'fwdpp::sample_diploid(const gsl_rng *r, gamete_cont_type&lt; gamete_type, gamete_cont_type_allocator &gt; &amp;gametes, diploid_vector_type&lt; diploid_geno_t, diploid_vector_type_allocator &gt; &amp;diploids, mutation_cont_type&lt; mutation_type, mutation_cont_type_allocator &gt; &amp;mutations, std::vector&lt; uint_t &gt; &amp;mcounts, const uint_t &amp;N_curr, const uint_t &amp;N_next, const double &amp;mu, const mutation_model &amp;mmodel, const recombination_policy &amp;rec_pol, const diploid_fitness_function &amp;ff, typename gamete_type::mutation_container &amp;neutral, typename gamete_type::mutation_container &amp;selected, const double f=0., const mutation_removal_policy mp=mutation_removal_policy())'],['../dd/d84/namespacefwdpp.html#a991ea2ec2731bd39883961bc32e11082',1,'fwdpp::sample_diploid(const gsl_rng *r, gamete_cont_type&lt; gamete_type, gamete_cont_type_allocator &gt; &amp;gametes, diploid_vector_type&lt; locus_vector_type&lt; diploid_geno_t, locus_vector_type_allocator &gt;, diploid_vector_type_allocator &gt; &amp;diploids, mutation_cont_type&lt; mutation_type, mutation_cont_type_allocator &gt; &amp;mutations, std::vector&lt; uint_t &gt; &amp;mcounts, const uint_t &amp;N_curr, const uint_t &amp;N_next, const double *mu, const mutation_model_container &amp;mmodel, const recombination_policy_container &amp;rec_policies, const std::vector&lt; std::function&lt; unsigned(void)&gt;&gt; &amp;interlocus_rec, const diploid_fitness_function &amp;ff, typename gamete_type::mutation_container &amp;neutral, typename gamete_type::mutation_container &amp;selected, const double &amp;f=0, const mutation_removal_policy &amp;mp=mutation_removal_policy())'],['../dd/d84/namespacefwdpp.html#ad34a0c60bcaad53b7dc606f6a554dc19',1,'fwdpp::sample_diploid(const gsl_rng *r, gamete_cont_type&lt; gamete_type, gamete_cont_type_allocator &gt; &amp;gametes, diploid_vector_type&lt; locus_vector_type&lt; diploid_geno_t, locus_vector_type_allocator &gt;, diploid_vector_type_allocator &gt; &amp;diploids, mutation_cont_type&lt; mutation_type, mutation_cont_type_allocator &gt; &amp;mutations, std::vector&lt; uint_t &gt; &amp;mcounts, const uint_t &amp;N, const double *mu, const mutation_model_container &amp;mmodel, const recombination_policy_container &amp;rec_policies, const std::vector&lt; std::function&lt; unsigned(void)&gt;&gt; &amp;interlocus_rec, const diploid_fitness_function &amp;ff, typename gamete_type::mutation_container &amp;neutral, typename gamete_type::mutation_container &amp;selected, const double &amp;f=0, const mutation_removal_policy &amp;mp=mutation_removal_policy())']]],
  ['sample_5fseparate',['sample_separate',['../dd/d84/namespacefwdpp.html#ad6264b39d2b499a18e9b89bbe6756ebd',1,'fwdpp::sample_separate(const gsl_rng *r, const poptype &amp;p, const unsigned nsam, const bool removeFixed)'],['../dd/d84/namespacefwdpp.html#af35c5db67774451dc1ec5a811e41877f',1,'fwdpp::sample_separate(const gsl_rng *r, const poptype &amp;p, const unsigned nsam, const bool removeFixed)'],['../dd/d84/namespacefwdpp.html#a784d270880e9e9cedb93fe5fe4991068',1,'fwdpp::sample_separate(const poptype &amp;p, const std::vector&lt; integer_type &gt; &amp;individuals, const bool removeFixed)'],['../dd/d84/namespacefwdpp.html#a578042406ff6ced45975a3b90a92ef86',1,'fwdpp::sample_separate(const poptype &amp;p, const std::vector&lt; integer_type &gt; &amp;individuals, const bool removeFixed)']]],
  ['scalar_5ffixture',['scalar_fixture',['../da/dce/structscalar__fixture.html#a316e6ac4a473b8594e8a69f59fa07a8f',1,'scalar_fixture']]],
  ['selected_5fmutrates',['selected_mutrates',['../d4/d11/extensions__regionsIntegrationTest_8cc.html#a918a8ae6ccb57da8c827d3d8184fc6f1',1,'extensions_regionsIntegrationTest.cc']]],
  ['serialize_5fdiploid',['serialize_diploid',['../d9/de3/structfwdpp_1_1io_1_1serialize__diploid_3_01std_1_1pair_3_01std_1_1uint32__t_00_01std_1_1uint32__t_01_4_01_4.html#ad9968b8ab032a6eb6c094b8de06d1ae4',1,'fwdpp::io::serialize_diploid&lt; std::pair&lt; std::uint32_t, std::uint32_t &gt; &gt;::serialize_diploid()'],['../d1/de7/structfwdpp_1_1io_1_1serialize__diploid_3_01std_1_1pair_3_01std_1_1size__t_00_01std_1_1size__t_01_4_01_4.html#a7ffbbb3caad44b84cb43c64956c96fa7',1,'fwdpp::io::serialize_diploid&lt; std::pair&lt; std::size_t, std::size_t &gt; &gt;::serialize_diploid()']]],
  ['serialize_5fmutation',['serialize_mutation',['../de/d85/structfwdpp_1_1io_1_1serialize__mutation_3_01popgenmut_01_4.html#af7654341801d7b080b054eccf63d6d35',1,'fwdpp::io::serialize_mutation&lt; popgenmut &gt;::serialize_mutation()'],['../d2/d82/structfwdpp_1_1io_1_1serialize__mutation_3_01TwoDmutation_01_4.html#ab2627d0076112de4f6327f7d978cb368',1,'fwdpp::io::serialize_mutation&lt; TwoDmutation &gt;::serialize_mutation()']]],
  ['serialize_5fpopulation',['serialize_population',['../dd/d82/namespacefwdpp_1_1io.html#a0581c380c40106198c8754e597d64a1e',1,'fwdpp::io']]],
  ['setup3locus2',['setup3locus2',['../d9/d1d/mlocusCrossoverTest_8cc.html#a51faea78454ba8c03b79dd0436cce855',1,'mlocusCrossoverTest.cc']]],
  ['shmodel',['shmodel',['../db/d90/structfwdpp_1_1extensions_1_1shmodel.html#a9371c3484d078c742119826d5438b642',1,'fwdpp::extensions::shmodel::shmodel()=default'],['../db/d90/structfwdpp_1_1extensions_1_1shmodel.html#aff1c3e025ffe724cfae3e5918000a065',1,'fwdpp::extensions::shmodel::shmodel(std::function&lt; double(const gsl_rng *)&gt; sfxn, std::function&lt; double(const gsl_rng *)&gt; hfxn)']]],
  ['simulate_5fmlocuspop',['simulate_mlocuspop',['../df/dcc/quick__evolve__sugar_8hpp.html#a0190332db39f13b50b5dfc3a6dffd780',1,'quick_evolve_sugar.hpp']]],
  ['simulate_5fslocuspop',['simulate_slocuspop',['../df/dcc/quick__evolve__sugar_8hpp.html#af44544102e4627a44c159cc00ef7012f',1,'simulate_slocuspop(slocuspop_object_t &amp;pop, const unsigned simlen=10, const unsigned popsize=5000):&#160;quick_evolve_sugar.hpp'],['../df/dcc/quick__evolve__sugar_8hpp.html#afac2cedb6598d0594ff7ad20dbe4da50',1,'simulate_slocuspop(slocuspop_object_t &amp;pop, const rng_type &amp;rng, const unsigned generation, const unsigned simlen):&#160;quick_evolve_sugar.hpp']]],
  ['slocuspop',['slocuspop',['../d2/d4e/classfwdpp_1_1sugar_1_1slocuspop.html#a5d2f121b57c722c2545626ea18a8773e',1,'fwdpp::sugar::slocuspop::slocuspop(slocuspop &amp;&amp;)=default'],['../d2/d4e/classfwdpp_1_1sugar_1_1slocuspop.html#a8c5405ad8436d8ad5e9209e2df34290c',1,'fwdpp::sugar::slocuspop::slocuspop(const slocuspop &amp;)=default'],['../d2/d4e/classfwdpp_1_1sugar_1_1slocuspop.html#a34e07480d7f4ad21baf9f554cd3dd0be',1,'fwdpp::sugar::slocuspop::slocuspop(const uint_t &amp;popsize, typename popbase_t::gamete_t::mutation_container::size_type reserve_size=100)'],['../d2/d4e/classfwdpp_1_1sugar_1_1slocuspop.html#aed493611cb025505ce127187af23994d',1,'fwdpp::sugar::slocuspop::slocuspop(diploids_input &amp;&amp;d, gametes_input &amp;&amp;g, mutations_input &amp;&amp;m)']]],
  ['slocuspop_5fobjects',['slocuspop_objects',['../d6/dde/structslocuspop__objects.html#a4b816bc4b6dd8a340d5d34cddcefe434',1,'slocuspop_objects']]],
  ['slocuspop_5fpopgenmut_5fcustom_5ffixture',['slocuspop_popgenmut_custom_fixture',['../d3/d2f/structslocuspop__popgenmut__custom__fixture.html#af9f2f45fa954a5a24d6a5ba844b635e1',1,'slocuspop_popgenmut_custom_fixture']]],
  ['slocuspop_5fpopgenmut_5ffixture',['slocuspop_popgenmut_fixture',['../d3/dee/structslocuspop__popgenmut__fixture.html#ab9db1a0c83e787c09852c894c514f3df',1,'slocuspop_popgenmut_fixture']]],
  ['standard_5fempty_5fmultiloc_5ffixture',['standard_empty_multiloc_fixture',['../d7/dbe/structstandard__empty__multiloc__fixture.html#abdee96fedeec9a04dc6720f25696c3ad',1,'standard_empty_multiloc_fixture']]],
  ['standard_5fempty_5fsingle_5fdeme_5ffixture',['standard_empty_single_deme_fixture',['../d4/d55/structstandard__empty__single__deme__fixture.html#adac6246f131ac753b2687e9bf7a5eeba',1,'standard_empty_single_deme_fixture']]]
];
